/* Auto-generated by genmsg_cpp for file /home/atmgast/workspace/Release1.1/ros/deltaRobotNode/srv/MoveToRelativePoint.srv */
#ifndef DELTAROBOTNODE_SERVICE_MOVETORELATIVEPOINT_H
#define DELTAROBOTNODE_SERVICE_MOVETORELATIVEPOINT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "deltaRobotNode/Motion.h"



namespace deltaRobotNode
{
template <class ContainerAllocator>
struct MoveToRelativePointRequest_ {
  typedef MoveToRelativePointRequest_<ContainerAllocator> Type;

  MoveToRelativePointRequest_()
  : motion()
  {
  }

  MoveToRelativePointRequest_(const ContainerAllocator& _alloc)
  : motion(_alloc)
  {
  }

  typedef  ::deltaRobotNode::Motion_<ContainerAllocator>  _motion_type;
   ::deltaRobotNode::Motion_<ContainerAllocator>  motion;


  typedef boost::shared_ptr< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct MoveToRelativePointRequest
typedef  ::deltaRobotNode::MoveToRelativePointRequest_<std::allocator<void> > MoveToRelativePointRequest;

typedef boost::shared_ptr< ::deltaRobotNode::MoveToRelativePointRequest> MoveToRelativePointRequestPtr;
typedef boost::shared_ptr< ::deltaRobotNode::MoveToRelativePointRequest const> MoveToRelativePointRequestConstPtr;


template <class ContainerAllocator>
struct MoveToRelativePointResponse_ {
  typedef MoveToRelativePointResponse_<ContainerAllocator> Type;

  MoveToRelativePointResponse_()
  : succeeded(false)
  {
  }

  MoveToRelativePointResponse_(const ContainerAllocator& _alloc)
  : succeeded(false)
  {
  }

  typedef uint8_t _succeeded_type;
  uint8_t succeeded;


  typedef boost::shared_ptr< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct MoveToRelativePointResponse
typedef  ::deltaRobotNode::MoveToRelativePointResponse_<std::allocator<void> > MoveToRelativePointResponse;

typedef boost::shared_ptr< ::deltaRobotNode::MoveToRelativePointResponse> MoveToRelativePointResponsePtr;
typedef boost::shared_ptr< ::deltaRobotNode::MoveToRelativePointResponse const> MoveToRelativePointResponseConstPtr;

struct MoveToRelativePoint
{

typedef MoveToRelativePointRequest Request;
typedef MoveToRelativePointResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct MoveToRelativePoint
} // namespace deltaRobotNode

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d5e2b63c47d3ae5a19960378109d3c87";
  }

  static const char* value(const  ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd5e2b63c47d3ae5aULL;
  static const uint64_t static_value2 = 0x19960378109d3c87ULL;
};

template<class ContainerAllocator>
struct DataType< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "deltaRobotNode/MoveToRelativePointRequest";
  }

  static const char* value(const  ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "Motion motion\n\
\n\
================================================================================\n\
MSG: deltaRobotNode/Motion\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 speed\n\
";
  }

  static const char* value(const  ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "95e696a0d10686913abb262e0b4cbbcf";
  }

  static const char* value(const  ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x95e696a0d1068691ULL;
  static const uint64_t static_value2 = 0x3abb262e0b4cbbcfULL;
};

template<class ContainerAllocator>
struct DataType< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "deltaRobotNode/MoveToRelativePointResponse";
  }

  static const char* value(const  ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool succeeded\n\
\n\
";
  }

  static const char* value(const  ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.motion);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct MoveToRelativePointRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.succeeded);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct MoveToRelativePointResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<deltaRobotNode::MoveToRelativePoint> {
  static const char* value() 
  {
    return "e333d572d6da71847017b8df0bfa52b4";
  }

  static const char* value(const deltaRobotNode::MoveToRelativePoint&) { return value(); } 
};

template<>
struct DataType<deltaRobotNode::MoveToRelativePoint> {
  static const char* value() 
  {
    return "deltaRobotNode/MoveToRelativePoint";
  }

  static const char* value(const deltaRobotNode::MoveToRelativePoint&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e333d572d6da71847017b8df0bfa52b4";
  }

  static const char* value(const deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "deltaRobotNode/MoveToRelativePoint";
  }

  static const char* value(const deltaRobotNode::MoveToRelativePointRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e333d572d6da71847017b8df0bfa52b4";
  }

  static const char* value(const deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "deltaRobotNode/MoveToRelativePoint";
  }

  static const char* value(const deltaRobotNode::MoveToRelativePointResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // DELTAROBOTNODE_SERVICE_MOVETORELATIVEPOINT_H

